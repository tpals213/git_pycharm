# pandas_test1.py

import pandas as pd
import numpy as np

# 데이터 분석을 위해서는 Series 와 DataFrame 을 준비한다.
# 예 : Series : numpy의 1차원 배열 또는 리스트 + 인덱스 라벨 지정

# 1. Series 객체 생성
# 예 : 각 도시의 2023년도 인구 데이터를 시리즈로 만든다면
s = pd.Series([9904312, 3448737, 2890451, 2466052], index=['서울', '부산', '인천', '대구'])
print(s)

# Series 객체 생성시, 인덱스 라벨은 생략가능
# 자동으로 0으로 시작하는 정수가 인덱스 라벨로 사용됨
print(pd.Series(range(10, 14)))

# 2. DataFrame (데이터프레임 : 표 - 행렬 : 2차원배열, 매트릭스) 만들기
# 변수 = pd.DataFrame(행렬변수, index=행 인덱스, columns=열 컬럼라벨)
data = {
    "2019": [9904312, 3448737, 2890451, 2466052],
    "2020": [9631482, 3393191, 2632035, 2431774],
    "2021": [9762546, 3512547, 2517680, 2456016],
    "2022": [9853972, 3655437, 2466338, 2473990],
    "지역": ["수도권", "경상권", "수도권", "경상권"],
    "2010-2015 증가율": [0.0283, 0.0163, 0.0982, 0.0141]
}   # dict 사전 자료형

print(type(data))
print(data)

# 출력시 컬럼 나열 순서를 재배치할 때 DataFrame 사용 가능 => 표 형태를 만들고자 한다면
# 컬럼 라벨
columns = ["지역", "2019", "2020", "2021", "2022", "2010-2015 증가율"]
# 인덱스 라벨 (행라벨)
index = ['서울', '부산', '인천', '대구']
df = pd.DataFrame(data, index=index, columns=columns)
print(df)

data2 = {
    "2019": [9904312, 3448737, 2890451, 2466052],
    "2020": [9631482, 3393191, 2632035, 2431774],
    "2021": [9762546, 3512547, 2517680, 2456016],
    "2022": [9853972, 3655437, 2466338, 2473990],
    "지역": ["수도권", "경상권", "수도권", "경상권"],
    "2010-2015 증가율": [0.0283, 0.0163, 0.0982, 0.0141]
}

# columns 생략되면, 위의 데이터 구성 순서대로 프레임이 구성
df2 = pd.DataFrame(data2, index = index)
print(df2)  # key가 컬럼 라벨이 됨

# DataFrame 생성시 index 라벨(행라벨), column 라벨(열라벨) 없이 생성 가능
df3 = pd.DataFrame(np.arange(12).reshape(3, 4))
print(df3)

# 파일 입출력 기능 제공
# 파일에 기록(저장) : 데이터프레임변수.to_파일종류('파일명,확장자', 속성=값, 값, ....)
# df.to_csv('sample.csv', mode='w', sep=',')

# 파일로부터 읽어와서 DataFrame에 저장
# 데이터프레임변수 = pd.read_파일종류('파일명.확장자', 속성=값, ...)
df4 = pd.read_csv('sample.csv')
print(df4)

